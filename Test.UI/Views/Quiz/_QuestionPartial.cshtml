@using Test.UI.Models.ViewModels.Quiz
@model QuizViewModel

<div id="questionContainer">
    <p>@Model.Questions[Model.CurrentQuestionIndex].QuestionText</p>

    <form id="quizForm" method="post">
        <div>
            <input type="radio" name="answer" value="Yes" id="yesAnswer" />
            <label for="yesAnswer">بله</label>
        </div>
        <div>
            <input type="radio" name="answer" value="No" id="noAnswer" />
            <label for="noAnswer">خیر</label>
        </div>

        <input type="hidden" name="questionId" value="@Model.Questions[Model.CurrentQuestionIndex].QuestionId" />
    </form>

    <div>
        @if (Model.CurrentQuestionIndex > 0)
        {
            <button id="previousQuestion" onclick="loadQuestion(@Model.CurrentQuestionIndex - 1)">سوال قبلی</button>
        }

        @if (Model.CurrentQuestionIndex < Model.Questions.Count - 1)
        {
            <button id="nextQuestion" onclick="submitAndLoadNextQuestion(@Model.CurrentQuestionIndex + 1)">سوال بعدی</button>
        }
        else
        {
            <!-- دکمه ثبت نهایی و مشاهده نتیجه در سوال آخر -->
            <button id="submitQuiz" onclick="submitQuiz()">ثبت جواب سوالات و دیدن نتیجه آزمون</button>
        }
    </div>

    <div>
        <span id="timer"></span> <!-- تایمر -->
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script>
    // بررسی وجود زمان باقی‌مانده در localStorage
    var timerDuration = localStorage.getItem('timerDuration') ? parseInt(localStorage.getItem('timerDuration')) : 5 * 60;

    var countdownTimer = setInterval(function () {
        var minutes = Math.floor(timerDuration / 60);
        var seconds = timerDuration % 60;
        document.getElementById('timer').innerText = minutes + ":" + (seconds < 10 ? "0" : "") + seconds;

        // ذخیره زمان باقی‌مانده در localStorage
        localStorage.setItem('timerDuration', timerDuration);

        if (timerDuration <= 0) {
            clearInterval(countdownTimer);
            localStorage.removeItem('timerDuration'); // حذف زمان پس از پایان
            window.location.href = '@Url.Action("Start", "Quiz")'; // هدایت پس از پایان زمان
        }

        timerDuration--;
    }, 1000);

    // ارسال پاسخ و بارگذاری سوال بعدی
    function submitAndLoadNextQuestion(nextIndex) {
        var selectedAnswer = $('input[name="answer"]:checked').val();
        var questionId = $('input[name="questionId"]').val();

        if (!selectedAnswer) {
            alert('لطفا یک گزینه را انتخاب کنید!');
            return;
        }

        // ساختن آبجکت مطابق با ViewModel
        var SubmitAnswerViewModel = {
            UserAnswer: selectedAnswer,
            QuestionId: questionId
        };

        // ارسال داده‌ها به صورت JSON
        $.ajax({
            url: '@Url.Action("SubmitAnswer", "Quiz")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(SubmitAnswerViewModel),
            success: function () {
                loadQuestion(nextIndex); // بارگذاری سوال بعدی پس از ارسال موفقیت‌آمیز پاسخ
            },
            error: function () {
                alert('خطایی در ثبت پاسخ رخ داد!');
            }
        });
    }

    // بارگذاری سوال
    function loadQuestion(index) {
        $.ajax({
            url: '@Url.Action("GetQuestion", "Quiz")',
            type: 'GET',
            data: { index: index },
            success: function (result) {
                $('#questionContainer').html(result);
            },
            error: function () {
                alert('خطا در بارگذاری سوال');
            }
        });
    }

    // ارسال نهایی و مشاهده نتیجه آزمون
    function submitQuiz() {
        var selectedAnswer = $('input[name="answer"]:checked').val();
        var questionId = $('input[name="questionId"]').val();

        if (!selectedAnswer) {
            alert('لطفا یک گزینه را انتخاب کنید!');
            return;
        }

        // ساختن آبجکت مطابق با ViewModel
        var SubmitAnswerViewModel = {
            UserAnswer: selectedAnswer,
            QuestionId: questionId
        };

        // ارسال داده‌ها به صورت JSON
        $.ajax({
            url: '@Url.Action("SubmitAnswer", "Quiz")',
            type: 'POST',
            contentType: 'application/json',
            data: JSON.stringify(SubmitAnswerViewModel),
            success: function () {
                // پس از ثبت موفق، به صفحه نتیجه هدایت شوید
                window.location.href = '@Url.Action("ShowResult", "Quiz")';
            },
            error: function () {
                alert('خطایی در ثبت پاسخ رخ داد!');
            }
        });
    }
</script>







